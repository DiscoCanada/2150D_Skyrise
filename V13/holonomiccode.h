//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
// FL Is Same
// Reverse FR
// Reverse BL
// BR Is Same

float kP=0.3;
float kConversionFactor=627.2/(3.14*3.25*1.41)
bool finished=true;
int kFlGoal;
int kFrGoal;
int kBlGoal;
int kBrGoal;
int kTurnGoal;

void turn(float angle, float direction)// Direction 1 = (Left 0 - 180) Direction 2 = (Right 181 - 360)
{
    while(!finished){}
    turngoal = angle;
}

void forward(float distance)
{
    while(!finished){}
    kFlGoal=distance*kConversionFactor;
    kFrGoal=distance*kConversionFactor;
    kBlGoal=distance*kConversionFactor;
    kBrGoal=distance*kConversionFactor;
}
void backward(float distance)
{
    while(!finished){}
    kFlGoal=-distance*kConversionFactor;
    kFrGoal=-distance*kConversionFactor;
    kBlGoal=-distance*kConversionFactor;
    kBrGoal=-distance*kConversionFactor;
}
void strafeleft(float distance)
{
    while(!finished){}
    kFlGoal=-distance*kConversionFactor;
    kFrGoal=distance*kConversionFactor;
    kBlGoal=distance*kConversionFactor;
    kBrGoal=-distance*kConversionFactor;
}
void straferight(float distance)
{
    while(!finished){}
    kFlGoal=distance*kConversionFactor;
    kFrGoal=-distance*kConversionFactor;
    kBlGoal=-distance*kConversionFactor;
    kBrGoal=distance*kConversionFactor;
}

task drivePID()
{
	while(1)
    {
        while((abs(flgoal-SensorValue(fl))>50) && abs(abs(flgoal-SensorValue(fr))>50) && (abs(flgoal-SensorValue(bl))>50) && (abs(flgoal-SensorValue(br))>50)) //probably should do all 4 but i was lazy
		{
			finished=false;
            motor[fl]=kP*(flgoal-SensorValue(fl));
            motor[fr]=kP*(frgoal-SensorValue(fr));
            motor[bl]=kP*(blgoal-SensorValue(bl));
            motor[br]=kP*(brgoal-SensorValue(br));
        }
        if(abs(flgoal-SensorValue(fl))<=50 && abs(flgoal-SensorValue(fr))<=50 && abs(flgoal-SensorValue(bl))<=50 && abs(flgoal-SensorValue(br))<=50)
        {
            finished=true;
            flgoal=0;
            frgoal=0;
            blgoal=0;
            brgoal=0;
            SensorValue(fl)=0;
            SensorValue(fr)=0;
            SensorValue(bl)=0;
            SensorValue(br)=0;
        }
    }
}

